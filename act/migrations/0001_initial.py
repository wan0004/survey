# Generated by Django 3.0.6 on 2020-05-12 01:52

from django.db import migrations, models
import django.db.models.deletion
import multiselectfield.db.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='DifferentlyAblePerson',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('types', models.CharField(blank=True, max_length=200, verbose_name='Type')),
                ('schemes', models.CharField(blank=True, max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Haji',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('schemes', models.CharField(blank=True, max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('sex', models.CharField(choices=[('male', 'Male'), ('female', 'Female')], max_length=50)),
                ('martial_status', models.CharField(choices=[('single', 'Single'), ('married', 'Married'), ('divorce', 'Divorce'), ('widowed', 'Widowed')], max_length=50)),
                ('age', models.IntegerField()),
                ('education_level', models.CharField(choices=[('below matric', 'Below Matric'), ('matriculate', 'Matriculate'), ('12 pass', '12 Pass'), ('graduate', 'Graduate'), ('pg', 'PG'), ('ph.d', 'Ph.D')], max_length=50)),
                ('occupation_status', models.CharField(choices=[('student', 'Student'), ('govt. employee', 'Govt. Employee'), ('unemployed', 'Unemployed'), ('self-employed', 'Self-Employed'), ('cultivator', 'Cultivator'), ('pvt. employee', 'Pvt. Employee'), ('minial job', 'Minial Job'), ('others', 'Others')], max_length=50)),
                ('income', models.CharField(choices=[('nill', 'Nill'), ('below ₹10k', 'Below ₹10k'), ('₹10k to ₹25k', '₹10k to ₹25k'), ('₹25k to ₹50k', '₹25k to ₹50k'), ('above ₹50k', 'Above ₹50k')], max_length=50)),
                ('house_no', models.IntegerField()),
                ('registered_voter', models.BooleanField(default=False)),
                ('procured_certificate_available', models.BooleanField(default=False)),
                ('aadhar_card_available', models.BooleanField(default=False)),
                ('bank_account_available', models.BooleanField(default=False)),
                ('course_class', models.CharField(blank=True, max_length=50)),
                ('type_of_education_sector', models.CharField(blank=True, choices=[('government', 'Government'), ('private', 'Private'), ('anganwadi center', 'Anganwadi Center')], max_length=50)),
                ('education_facility_proximity', models.CharField(blank=True, choices=[('0-5', '0-5km'), ('5-10', '5-10km'), ('10+', 'Above 10km'), ('outside the state', 'Outside the state')], max_length=50)),
                ('satisfaction_of_study', models.BooleanField(blank=True, default=False)),
                ('scholarship_received', models.BooleanField(blank=True, default=False)),
                ('scholarship_name', models.CharField(blank=True, max_length=300)),
                ('drop_out', models.BooleanField(blank=True, default=False)),
                ('drop_out_reason', models.CharField(blank=True, max_length=1000)),
                ('government_designation', models.CharField(blank=True, max_length=100, verbose_name='Designation')),
                ('government_group', models.CharField(blank=True, max_length=100, verbose_name='Group/Category')),
                ('government_monthly_income', models.IntegerField(blank=True, null=True, verbose_name='Monthly Income')),
                ('private_designation', models.CharField(blank=True, max_length=100, verbose_name='Designation')),
                ('private_group', models.CharField(blank=True, max_length=100, verbose_name='Group/Category')),
                ('private_monthly_income', models.IntegerField(blank=True, default=0, verbose_name='Monthly Income')),
                ('own_agriculture_land', models.BooleanField()),
                ('size_of_land', models.CharField(blank=True, max_length=100)),
                ('purpose_of_land', models.CharField(blank=True, max_length=1000)),
                ('profit', models.IntegerField(blank=True, default=0, verbose_name='Profit from the agriculture land')),
                ('farm_type', models.CharField(blank=True, choices=[('poultry', 'Poultry'), ('live stock', 'Live Stock'), ('others', 'others')], max_length=20)),
                ('farm_remark', models.CharField(blank=True, max_length=1000, verbose_name='Remarks, If any?')),
                ('business_type', models.CharField(blank=True, choices=[('whole sale', 'Whole Sale'), ('retail shop', 'Retail Shop'), ('others', 'others')], max_length=20)),
                ('business_remark', models.CharField(blank=True, max_length=1000, verbose_name='Remarks, If any?')),
                ('type_of_entreprenureship', models.CharField(blank=True, max_length=1000)),
                ('entreprenureship_remark', models.CharField(blank=True, max_length=1000, verbose_name='Remarks, If any?')),
            ],
        ),
        migrations.CreateModel(
            name='Orphan',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('schemes', models.CharField(blank=True, max_length=100)),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='act.Person')),
            ],
        ),
        migrations.CreateModel(
            name='OldAgedPerson',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('schemes', models.CharField(blank=True, max_length=100)),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='act.Person')),
            ],
        ),
        migrations.CreateModel(
            name='Housing',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('house_no', models.IntegerField(unique=True, verbose_name='House No')),
                ('head_of_family', models.CharField(max_length=100)),
                ('homested_area', models.CharField(max_length=20)),
                ('type_of_house', models.CharField(choices=[('pucca', 'Pucca'), ('semi pucca', 'Semi Pucca'), ('kutcha', 'Kutcha')], max_length=100)),
                ('ownership', models.CharField(choices=[('owned', 'Owned'), ('rented', 'Rented')], max_length=100)),
                ('no_of_rooms', models.IntegerField()),
                ('fuel_for_cooking', multiselectfield.db.fields.MultiSelectField(choices=[('firewood', 'Firewood'), ('lpg', 'LPG'), ('electricity', 'Electricity'), ('kerosene', 'Kerosene')], max_length=33)),
                ('access_to_electricity', models.BooleanField(default=False)),
                ('water_source', models.CharField(choices=[('pipe', 'Pipe'), ('river', 'River'), ('handpump', 'Handpump'), ('common pond', 'Common Pond'), ('own pond', 'Own Pond'), ('others', 'Others')], max_length=100)),
                ('water_availability', models.CharField(choices=[('less than 1km', 'Less than 1km'), ('more than 1km', 'More than 1km')], max_length=100)),
                ('toilet_facility', models.CharField(choices=[('open', 'Open'), ('outlet', 'Outlet'), ('others', 'Others')], max_length=100)),
                ('bath_facility', models.BooleanField(default=False)),
                ('sewage_disposal_facility', models.BooleanField(default=False)),
                ('no_of_years_stayed_here', models.CharField(choices=[('since birth', 'Since Birth'), ('<10', 'Less than 10 years'), ('<25', 'Less than 25 years'), ('<50', 'Less than 50 years'), ('<70', 'Less than 70 years'), ('>70', 'Above 70 years')], max_length=20)),
                ('ever_lived_in_another_place', models.BooleanField(default=False)),
                ('family_type', models.CharField(choices=[('joint family', 'Joint Family'), ('nuclear family', 'Nuclear Family'), ('extended family', 'Extended Family')], max_length=100)),
                ('orphan_children_available', models.BooleanField(default=False, verbose_name='Is there any orphan children in your household? If yes, specify how many?')),
                ('differently_able_person_available', models.BooleanField(default=False, verbose_name='Are there any differently able persons in the household?')),
                ('old_aged_person_available', models.BooleanField(default=False, verbose_name='Is there any old aged person in your household? If yes, specify below?')),
                ('haji_available', models.BooleanField(default=False, verbose_name='Is there any Haji in the household?')),
                ('priority_household', models.CharField(choices=[('bpl', 'BPL'), ('apl', 'APL'), ('aay', 'AAY')], max_length=10)),
                ('nation_food_security_act', models.BooleanField(verbose_name='Covered by National Food Security Act (NFSA)?')),
                ('housing_schemes', models.BooleanField(verbose_name='Housing Scheme? If yes, specify below.')),
                ('specify_housing_schemes', models.CharField(blank=True, max_length=300)),
                ('old_aged_pension_scheme', models.BooleanField(verbose_name='Old aged pension scheme, If yes, specify below.')),
                ('specify_old_aged_pension_scheme', models.CharField(blank=True, max_length=300)),
                ('other_schemes', models.BooleanField(verbose_name='If other scheme, specify below.')),
                ('specify_other_schemes', models.CharField(blank=True, max_length=300)),
                ('differently_able_person_available_names', models.ManyToManyField(blank=True, related_name='differently_able_person', to='act.DifferentlyAblePerson')),
                ('haji_name', models.ManyToManyField(blank=True, max_length=300, related_name='haji_person_names', to='act.Haji', verbose_name='Haji Names')),
                ('members', models.ManyToManyField(related_name='family_members', to='act.Person')),
                ('old_aged_person_names', models.ManyToManyField(blank=True, max_length=300, related_name='old_person_names', to='act.OldAgedPerson', verbose_name='Old Aged Names')),
                ('orphan_children_names', models.ManyToManyField(blank=True, max_length=300, related_name='orphan_person_names', to='act.Orphan', verbose_name='Orphan Names')),
            ],
        ),
        migrations.AddField(
            model_name='haji',
            name='person',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='act.Person'),
        ),
        migrations.AddField(
            model_name='differentlyableperson',
            name='person',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='act.Person'),
        ),
    ]
